#!/usr/bin/env python
# ftclient
# CS372 Spring 2018
# -----------------
# Name: Zachary Thomas
# Email: thomasza@oregonstate.edu
# Date: 5/19/2018
# ------------------------------------
# Set up file transfer with server.
# ------------------------------------
# Cited references:
# Lecture 15: Socket Programming Primer 

from socket import *
import sys
import time

# validateInput
# -------------
# Validate that the input is valid from the command line.
def validateInput(): 
	#confirm command line arguments include port number
	if (len(sys.argv) < 5 or len(sys.argv) > 6):
		print "Useage: " + str(sys.argv[0]) + " [server address] [server port] [command] [filename] [data port]" 
		sys.exit(0)
	
	#confirm a valid command was used
	if (sys.argv[3] != "-l" and sys.argv[3] != "-g"):
		print "Invalid command. Valid commands are -g or -l"
		sys.exit(0)

# initiateContact
# -------
# Sets up a control connection with a ftserver. 
def initiateContact(controlSocket, serverName, serverPort):
	#attempt to connect to the server
	try:
		controlSocket.connect((serverName, serverPort))
	except:
    		print "Failed to connect to server"
		sys.exit(1)
	
# makeRequest 
# ------------
# Send a request to the server.
# The request will either be for listing
# the contents of the directory (-l) 
# or for a file (-g).
def makeRequest(dataPort, command, fileName, controlSocket):
	#send a transfer request
	request = str(dataPort) + command + fileName + "\n"
	controlSocket.send(request)

# receiveFile
# ------------
# Connect to data port of ftserver.
# Once connected receive file from server on data port.
def receiveFile(dataSocket, serverName, serverPort, dataPort):
	#attempt to connect to data port for transfer at most five times
	for i in range(0,5):	
		try:
			dataSocket.connect((serverName, dataPort))
			break
		except:
			if (i == 4):
    				print "Failed to connect to server data port"
				sys.exit(1)
			time.sleep(1)
	
	#receive and print message from sever 
	fileContents = controlSocket.recv(1000)
	print fileContents

	#receive file from server	
	fileContents = dataSocket.recv(5000000)
	print fileContents

	#close both connections	
	dataSocket.close()
	controlSocket.close()	

def main():
	#confirm that input was valid
	validateInput()
	
	#define command line arguments by name
	serverName = sys.argv[1]
	serverPort = int(sys.argv[2])
	command	= sys.argv[3]

	#if we don't enter a file name then accept argument four as the data port
	if (len(sys.argv) == 6):
		fileName = sys.argv[4]
		dataPort = int(sys.argv[5])
	else:
		dataPort = int(sys.argv[4])
	#connect to a ftserver on the control port
	controlSocket = socket(AF_INET, SOCK_STREAM)
	initiateContact(controlSocket, serverName, serverPort)	
	
	#send a request for a file or list to server
	makeRequest(dataPort, command, fileName, controlSocket)

	#establish data port connection and receive file
	dataSocket = socket(AF_INET, SOCK_STREAM)
	receiveFile(dataSocket, serverName, serverPort, dataPort)

if __name__ == "__main__":
	main()
